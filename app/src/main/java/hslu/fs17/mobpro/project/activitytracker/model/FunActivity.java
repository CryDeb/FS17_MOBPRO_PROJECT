package hslu.fs17.mobpro.project.activitytracker.model;

import java.util.Calendar;
import java.util.Date;

import hslu.fs17.mobpro.project.activitytracker.DateFormation;
import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Index;
import io.objectbox.annotation.Relation;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.Box;
import io.objectbox.BoxStore;
import io.objectbox.relation.ToOne;


@Entity
public class FunActivity {

    @Id
    long id;

    long myAuthorId;
    @Relation(idProperty = "myAuthorId")
    Author author;

    private String title;
    @Index
    private String finalDate;
    private String activityDescription;
    private boolean activityDone;

    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;

    @Internal
    @Generated(499453546)
    transient ToOne<Author> authorToOne = new ToOne<>(this, FunActivity_.author);

    public FunActivity(Author author, String title, String des, String date) {
        this.author = author;
        this.title = title;
        this.activityDescription = des;
        this.finalDate = date;
    }

    @Generated(929596268)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public FunActivity(long id, long myAuthorId, String title, String finalDate,
            String activityDescription, boolean activityDone) {
        this.id = id;
        this.myAuthorId = myAuthorId;
        this.title = title;
        this.finalDate = finalDate;
        this.activityDescription = activityDescription;
        this.activityDone = activityDone;
    }

    @Generated(643240084)
    public FunActivity() {
    }

    public String getActivityDescription() {
        return activityDescription;
    }

    public void setActivityDescription(String activityDescription) {
        this.activityDescription = activityDescription;
    }

    public boolean isActivityDone() {
        return activityDone;
    }

    public void setActivityDone(boolean activityDone) {
        this.activityDone = activityDone;
    }

    public boolean getActivityDone() {
        return activityDone;
    }

    /** To-one relationship, resolved on first access. */
    @Generated(1262700957)
    public Author getAuthor() {
        author = authorToOne.getTarget(this.myAuthorId);
        return author;
    }

    public Author getTheAuthor() {
        return this.author;
    }

    /** Set the to-one relation including its ID property. */
    @Generated(112685672)
    public void setAuthor(Author author) {
        authorToOne.setTarget(author);
        this.author = author;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getFinalDate() {
        return finalDate;
    }

    public void setFinalDate(String finalDate) {
        this.finalDate = finalDate;
    }
}
